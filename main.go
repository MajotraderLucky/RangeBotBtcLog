package main

import (
	"context"
	"encoding/json"
	"log"
	"os"

	"github.com/MajotraderLucky/MarketRepository/initlog"
	"github.com/MajotraderLucky/MarketRepository/positionlog"
	"github.com/MajotraderLucky/Utils/logger"
)

func main() {
	logger := logger.Logger{}
	err := logger.CreateLogsDir()
	if err != nil {
		log.Fatal(err)
	}
	err = logger.OpenLogFile()
	if err != nil {
		log.Fatal(err)
	}
	logger.SetLogger()
	logger.LogLine()

	// If all files are found, start the program
	if initlog.CheckFilesExist() {
		log.Println("----------All files found, starting program----------")
	}

	log.Println("Btc bot started...")

	initlog.Init()

	positionlog.Hello()

	futuresClient := initlog.NewFuturesClient()

	accServ, err := futuresClient.NewGetAccountService().Do(context.Background())
	if err != nil {
		log.Println(err)
		return
	}
	accServVar, _ := json.Marshal(accServ)
	fileJson, err := json.Marshal(accServ)
	if err != nil {
		panic(err)
	}
	err = os.WriteFile("fileJson.json", fileJson, 0644)
	if err != nil {
		panic(err)
	}

	var autoGeneratedPos positionlog.AutoGeneratedPos
	json.Unmarshal(accServVar, &autoGeneratedPos)

	var positionBTCindex int

	for k := 0; k < len(autoGeneratedPos.Positions); k++ {
		if autoGeneratedPos.Positions[k].Symbol == "BTCUSDT" {
			positionBTCindex = k
		}
	}
	log.Println("Item positions total:", autoGeneratedPos.Positions[positionBTCindex].PositionAmt)

	hasOpenPos := positionlog.HasOpenPositions(autoGeneratedPos)
	log.Println("Has open positions: ", hasOpenPos)

	logger.LogLine()
	logger.CleanLog()
}
